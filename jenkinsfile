#!/usr/bin/env groovy
@Library('shared-library')_


pipeline {
    agent none

     options {
        skipDefaultCheckout(true)
        reduceBuilds()
        timestamps()

        // Keep the 10 most recent builds
        //  // buildDiscarder(logRotator(numToKeepStr: '5'))
     
    }

   
    //  Settign up  to ensure the process does not hang up after 
    stages{
            stage("Checkout Code") {
            steps {
            script {
                git branch: "main",
                    credentialsId: 'BKGQB291K',
                    url: 'https://github.com/markowusu/FastAPI_tutorials_PRO.git'
            }
        }
    }

     stage('Build') {
            steps {
                sh 'docker build -t mypythonapp .'
            }

     }


        stage("Login to AWS ECR") {
            steps {
                loginToAwsEcr(credentialsId: "1281b2be-69e3-4045-895c-361a31581f57", awsRegion: "us-east-1", awsAccountId: "001526952227")
            }
        }
    

        stage("Push Docker image to AWS ECR") {
            steps {
                sh 'docker tag mypythonapp:latest 001526952227.dkr.ecr.us-east-1.amazonaws.com/mypythonapp:latest'
                sh 'docker push 001526952227.dkr.ecr.us-east-1.amazonaws.com/mypythonapp:latest'
                // sh "docker push 001526952227.dkr.ecr.us-east-1.amazonaws.com/mypythonapp:latest"
            }
        }   

    post {
        always {
            echo 'Terateck CD in progresss'
        }
        success {
            echo 'CD build is successful'
            mail to: 'macositnow@gmail.com',
                 subject: 'CD build is Successful',
                 body: "The image has built succesfuly"
        }
        }
        failure {
            echo 'Build failed; Perform a regression test'
        }
        unstable {
            echo 'Build marked as UNSTABLE'
        }
        changed {
            echo 'state of the Pipeline has changed'
            // echo 'For example, if the Pipeline was previously failing but is now successful'
        }


}

}